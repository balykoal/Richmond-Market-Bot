"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã, —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
"""

import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from database import PaymentOperations
from keyboards.inline import MainKeyboards, NavigationKeyboards
from utils.states import PostCreation
from utils.helpers import format_price, PriceHelper
from services.notification import NotificationService
from config import settings, PaymentStatus

logger = logging.getLogger(__name__)
router = Router()


@router.callback_query(F.data == "create_post")
async def create_post_start(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞
    """
    try:
        await state.set_state(PostCreation.choosing_post_type)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        is_admin = callback.from_user.id == settings.ADMIN_ID

        admin_note = ""
        if is_admin:
            admin_note = "\n\nüëë <b>–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n–í–∞—à–∏ –ø–ª–∞—Ç–µ–∂–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã"

        text = f"""
üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ—Å—Ç–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è:

üìù <b>–û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç ({settings.REGULAR_POST_PRICE}‚ÇΩ)</b>
- –†–∞–∑–º–µ—â–∞–µ—Ç—Å—è –≤ –æ–±—â–µ–π –ª–µ–Ω—Ç–µ
- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
- –î–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º

üìå <b>–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç ({settings.PINNED_POST_PRICE}‚ÇΩ)</b>
- –ó–∞–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –∫–∞–Ω–∞–ª–∞
- –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å
- –ë–æ–ª—å—à–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –æ—Ç–∫–ª–∏–∫–æ–≤

–ö–∞–∫–æ–π —Ç–∏–ø –ø–æ—Å—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å? ü§î{admin_note}
"""

        await callback.message.edit_text(
            text=text,
            reply_markup=MainKeyboards.get_post_type_menu(),
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ create_post_start: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "back_to_post_type")
async def back_to_post_type(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞
    """
    try:
        await state.set_state(PostCreation.choosing_post_type)

        text = f"""
üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ—Å—Ç–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è:

üìù <b>–û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç ({settings.REGULAR_POST_PRICE}‚ÇΩ)</b>
üìå <b>–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç ({settings.PINNED_POST_PRICE}‚ÇΩ)</b>

–ö–∞–∫–æ–π —Ç–∏–ø –ø–æ—Å—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å?
"""

        await callback.message.edit_text(
            text=text,
            reply_markup=MainKeyboards.get_post_type_menu(),
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_post_type: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data.startswith("payment:"), PostCreation.choosing_payment_method)
async def payment_method_selected(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    """
    try:
        payment_method = callback.data.split(":")[1]

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        post_type = data.get('post_type')
        price = PriceHelper.get_post_price(post_type)

        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        payment_id = await PaymentOperations.create_payment(
            user_id=callback.from_user.id,
            amount=price,
            method=payment_method,
            currency="RUB"
        )

        if not payment_id:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞", show_alert=True)
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ
        await state.update_data(
            payment_method=payment_method,
            payment_id=payment_id,
            price=price
        )
        await state.set_state(PostCreation.waiting_payment)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
        payment_info = f"""
üè¶ <b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–ë–ü</b>

üí≥ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</b>
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: <code>{settings.CARD_NUMBER}</code>
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: <b>{settings.CARD_HOLDER}</b>

üí∞ <b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> {format_price(price)} ‚ÇΩ

üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>
1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É
2. –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂"
3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
4. –ü—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Å—Ç–∞!

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
- –ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É
- –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ
- –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

–ü–ª–∞—Ç–µ–∂ ‚Ññ{payment_id}
"""

        await callback.message.edit_text(
            text=payment_info,
            reply_markup=MainKeyboards.get_payment_status_menu(payment_id),
            parse_mode="HTML"
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–º –ø–ª–∞—Ç–µ–∂–µ —Å –∫–Ω–æ–ø–∫–æ–π
        notification_service = NotificationService(callback.bot)
        await notification_service.notify_admin_new_payment(payment_id)

        await callback.answer("üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ payment_method_selected: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data.startswith("check_payment:"), PostCreation.waiting_payment)
async def check_payment_status(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
    """
    try:
        payment_id = int(callback.data.split(":")[1])

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ
        payment = await PaymentOperations.get_payment(payment_id)

        if not payment:
            await callback.answer("‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if payment['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return

        status = payment['status']
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ {payment_id}, —Å—Ç–∞—Ç—É—Å: {status}")

        if status == PaymentStatus.PENDING:
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞—Ç—É—Å "–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ"
            success = await PaymentOperations.update_payment_status(payment_id, PaymentStatus.CHECKING)
            if success:
                await callback.answer("üîç –ü–ª–∞—Ç–µ–∂ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            text = f"""
üîç <b>–ü–ª–∞—Ç–µ–∂ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</b>

–ü–ª–∞—Ç–µ–∂ ‚Ññ{payment_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.

‚è± <b>–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏:</b> 5-15 –º–∏–Ω—É—Ç
üìû <b>–í–æ–ø—Ä–æ—Å—ã:</b> @balykoal

–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! üîî
"""

            await callback.message.edit_text(
                text=text,
                reply_markup=NavigationKeyboards.get_back_to_main_menu(),
                parse_mode="HTML"
            )

        elif status == PaymentStatus.CHECKING:
            await callback.answer("üîç –ü–ª–∞—Ç–µ–∂ —É–∂–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

        elif status == PaymentStatus.CONFIRMED:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            data = await state.get_data()
            post_type = data.get('post_type')
            price = data.get('price')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
            await state.update_data(
                payment_id=payment_id,
                price=price,
                post_type=post_type,
                photos=[]  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            )

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Å—Ç–∞
            await state.set_state(PostCreation.waiting_photos)

            text = f"""
‚úÖ <b>–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!</b>

–û—Ç–ª–∏—á–Ω–æ! –í–∞—à –ø–ª–∞—Ç–µ–∂ ‚Ññ{payment_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.

–¢–µ–ø–µ—Ä—å –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Å—Ç–∞! üìù

üì∏ <b>–®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</b>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç {settings.MIN_PHOTOS} –¥–æ {settings.MAX_PHOTOS} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞.

üí° <b>–°–æ–≤–µ—Ç—ã –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö —Ñ–æ—Ç–æ:</b>
- –î–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏
- –ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä —Å —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–æ–≤
- –í–∫–ª—é—á–∏—Ç–µ —Ñ–æ—Ç–æ –¥–µ—Ñ–µ–∫—Ç–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–µ—Ç–∫–∏–º–∏

–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é üì∏
"""

            await callback.message.edit_text(text=text, parse_mode="HTML")
            await callback.answer("‚úÖ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Å—Ç–∞")

        elif status == PaymentStatus.REJECTED:
            reason = payment.get('rejection_reason', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')

            text = f"""
‚ùå <b>–ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω</b>

–ü–ª–∞—Ç–µ–∂ ‚Ññ{payment_id} –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.

<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {reason}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π: @balykoal

–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂, –Ω–∞–∂–∞–≤ "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
"""

            await callback.message.edit_text(
                text=text,
                reply_markup=NavigationKeyboards.get_back_to_main_menu(),
                parse_mode="HTML"
            )

            await callback.answer("‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω")

        else:
            await callback.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ check_payment_status: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞", show_alert=True)


@router.callback_query(F.data == "cancel_payment")
async def cancel_payment(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –û—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞
    """
    try:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

        text = """
‚ùå <b>–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω</b>

–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã. –ü–ª–∞—Ç–µ–∂ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω.

–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–∞–≤ "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é! üòä
"""

        await callback.message.edit_text(
            text=text,
            reply_markup=MainKeyboards.get_main_menu(callback.from_user.id, settings.ADMIN_ID),
            parse_mode="HTML"
        )

        await callback.answer("‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cancel_payment: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)