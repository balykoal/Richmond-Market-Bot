"""\
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from database import UserOperations, PaymentOperations, AdminOperations
from keyboards.inline import MainKeyboards, NavigationKeyboards, AdminKeyboards, InlineKeyboardMarkup, InlineKeyboardButton
from keyboards.reply import ReplyKeyboards
from utils.helpers import UserHelper
from config import settings

logger = logging.getLogger(__name__)
router = Router()


@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∏–Ω—è—Ç–∏—è –æ—Ñ–µ—Ä—Ç—ã"""
    try:
        await state.clear()

        user = message.from_user
        user_data = UserHelper.extract_user_data(user)
        is_admin = user.id == settings.ADMIN_ID

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success = await UserOperations.create_user(
            user_id=user_data['user_id'],
            username=user_data['username'],
            first_name=user_data['first_name'],
            last_name=user_data['last_name']
        )

        if success:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ñ–µ—Ä—Ç—É
        has_accepted = await UserOperations.has_accepted_offer(user.id)

        if not has_accepted:
            offer_text = f"""
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name or "–¥—Ä—É–≥"}!</b>

–≠—Ç–æ –±–æ—Ç Richmond Market –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ –ø—Ä–æ–¥–∞–∂–µ –≤ –∫–∞–Ω–∞–ª–µ @richmondmarket.

<b>–ö—Ä–∞—Ç–∫–æ –æ —Å–µ—Ä–≤–∏—Å–µ:</b>
- –†–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–¥–µ–ª–∫–∏

<b>üìã –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏:</b>
"""

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üìñ –ß–∏—Ç–∞—Ç—å –ø—É–±–ª–∏—á–Ω—É—é –æ—Ñ–µ—Ä—Ç—É",
                    url="https://telegra.ph/Publichnaya-Oferta-RICHMOND-MARKET-09-27"
                )],
                [InlineKeyboardButton(
                    text="‚úÖ –Ø –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è",
                    callback_data="accept_offer"
                )]
            ])

            await message.answer(
                text=offer_text,
                reply_markup=keyboard,
                parse_mode="HTML",
                disable_web_page_preview=True
            )
        else:
            welcome_text = f"""
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Richmond Market!</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name or "–¥—Ä—É–≥"}! üëã

<b>üí∞ –¶–µ–Ω—ã:</b>
- –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç: 200‚ÇΩ
- –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç: 1000‚ÇΩ

<b>üî• –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞
‚úÖ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —á–µ–∫–∏
‚úÖ –ë–æ–ª—å—à–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

–ì–æ—Ç–æ–≤ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç? üöÄ
"""

            await message.answer(
                text=welcome_text,
                reply_markup=MainKeyboards.get_main_menu(user.id, settings.ADMIN_ID),
                parse_mode="HTML",
                disable_web_page_preview=True
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await message.answer(
                text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:",
                reply_markup=ReplyKeyboards.get_start_keyboard(is_admin)
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start_handler: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=NavigationKeyboards.get_back_to_main_menu()
        )

@router.message(F.text == "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
async def start_work_button(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É'"""
    try:
        await message.answer(
            text="üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=MainKeyboards.get_main_menu(message.from_user.id, settings.ADMIN_ID),
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start_work_button: {e}")


@router.message(F.text == "üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_button(message: Message, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å'"""
    try:
        if message.from_user.id != settings.ADMIN_ID:
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
            return

        await state.clear()

        stats = await AdminOperations.get_stats()
        pending_payments = await PaymentOperations.get_pending_payments()

        text = f"""
üëë <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>

üìä <b>–ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('users', {}).get('total', 0)}
- –ü–æ—Å—Ç–æ–≤: {stats.get('posts', {}).get('total', 0)}
- –ü–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ: {len(pending_payments)}
- –î–æ—Ö–æ–¥: {stats.get('payments', {}).get('revenue', 0)} ‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá
"""
        await message.answer(
            text=text,
            reply_markup=AdminKeyboards.get_admin_menu(),
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ admin_panel_button: {e}")

@router.callback_query(F.data == "accept_offer")
async def accept_offer(callback: CallbackQuery) -> None:
    """–ü—Ä–∏–Ω—è—Ç–∏–µ –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã"""
    try:
        user_id = callback.from_user.id

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        success = await UserOperations.update_offer_accepted(user_id)

        if success:
            welcome_text = f"""
‚úÖ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —É—Å–ª–æ–≤–∏–π!</b>

üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Richmond Market!</b>

–ü—Ä–∏–≤–µ—Ç, {callback.from_user.first_name or "–¥—Ä—É–≥"}! üëã

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ <a href="https://t.me/richmondmarket">@richmondmarket</a>.

<b>üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ—à—å —Ç–∏–ø –ø–æ—Å—Ç–∞ (–æ–±—ã—á–Ω—ã–π –∏–ª–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π)
2Ô∏è‚É£ –û–ø–ª–∞—á–∏–≤–∞–µ—à—å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É
3Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ—à—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
4Ô∏è‚É£ –¢–≤–æ–π –ø–æ—Å—Ç –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ!

<b>üí∞ –¶–µ–Ω—ã:</b>
‚Ä¢ –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç: 200‚ÇΩ
‚Ä¢ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç: 1000‚ÇΩ

<b>üî• –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞
‚úÖ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —á–µ–∫–∏
‚úÖ –ë–æ–ª—å—à–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

–ì–æ—Ç–æ–≤ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç? üöÄ
"""

            await callback.message.edit_text(
                text=welcome_text,
                reply_markup=MainKeyboards.get_main_menu(user_id, settings.ADMIN_ID),
                parse_mode="HTML",
                disable_web_page_preview=True
            )

            await callback.answer("‚úÖ –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–Ω—è—Ç—ã!")
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", show_alert=True)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ accept_offer: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "back_to_main")
async def back_to_main_handler(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    try:
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

        main_menu_text = f"""\
üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:

üìù <b>–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç</b> - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
üìã <b>–ú–æ–∏ –ø–æ—Å—Ç—ã</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
üí≥ <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏
‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b> - –ø–æ–º–æ—â—å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã

–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? üëá\
"""

        await callback.message.edit_text(
            text=main_menu_text,
            reply_markup=MainKeyboards.get_main_menu(callback.from_user.id, settings.ADMIN_ID),
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_main_handler: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "info")
async def info_handler(callback: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" """
    try:
        info_text = f"""\
‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</b>

<b>ü§ñ Richmond Market Bot</b>
–ë–æ—Ç –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–ª–∞—Ç–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ @richmondmarket

<b>üí∞ –¢–∞—Ä–∏—Ñ—ã:</b>
- –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç: {settings.REGULAR_POST_PRICE}‚ÇΩ
- –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç: {settings.PINNED_POST_PRICE}‚ÇΩ

<b>üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ—Å—Ç—É:</b>
- –ú–∏–Ω–∏–º—É–º {settings.MIN_PHOTOS} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
- –ú–∞–∫—Å–∏–º—É–º {settings.MAX_PHOTOS} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
- –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
- –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

<b>üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>
- –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)

<b>‚è± –í—Ä–µ–º—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è:</b>
–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤–∞—à –ø–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 5-10 –º–∏–Ω—É—Ç.

<b>üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @balykoal

<b>üìã –ü—Ä–∞–≤–∏–ª–∞:</b>
- –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏—é
- –û–¥–∏–Ω —Ç–æ–≤–∞—Ä - –æ–¥–∏–Ω –ø–æ—Å—Ç
- –î—É–±–ª–∏ –ø–æ—Å—Ç–æ–≤ —É–¥–∞–ª—è—é—Ç—Å—è

–£–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂! üçÄ\
"""

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ñ–µ—Ä—Ç—ã
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üìñ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞",
                url="https://telegra.ph/Publichnaya-Oferta-RICHMOND-MARKET-09-27"
            )],
            [InlineKeyboardButton(
                text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_main"
            )]
        ])

        await callback.message.edit_text(
            text=info_text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ info_handler: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "my_posts")
async def my_posts_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å
    """
    try:
        user_id = callback.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from database import PostOperations
        posts = await PostOperations.get_user_posts(user_id)

        if not posts:
            text = """\
üìã <b>–ú–æ–∏ –ø–æ—Å—Ç—ã</b>

–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.

–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç? –ù–∞–∂–º–∏—Ç–µ "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é! üöÄ\
"""
        else:
            text = f"""\
üìã <b>–ú–æ–∏ –ø–æ—Å—Ç—ã</b>

–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π:\
"""

        from keyboards.inline import PostKeyboards
        await callback.message.edit_text(
            text=text,
            reply_markup=PostKeyboards.get_my_posts_menu(posts),
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ my_posts_handler: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "my_payments")
async def my_payments_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π

    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å
    """
    try:
        user_id = callback.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from database import PaymentOperations
        payments = await PaymentOperations.get_user_payments(user_id)

        if not payments:
            text = """\
üí≥ <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b>

–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π.

–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∑–¥–µ—Å—å –∏—Å—Ç–æ—Ä–∏—é! üí™\
"""
        else:
            text = f"""\
üí≥ <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b>

–í—Å–µ–≥–æ –ø–ª–∞—Ç–µ–∂–µ–π: {len(payments)}

<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∏:</b>\
"""

            from utils.helpers import format_price, format_datetime
            for payment in payments[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
                status_emoji = {
                    'pending': '‚è≥',
                    'checking': 'üîç',
                    'confirmed': '‚úÖ',
                    'rejected': '‚ùå',
                    'expired': '‚è∞'
                }.get(payment['status'], '‚ùì')

                method_text = "–°–ë–ü" if payment['method'] == 'sbp' else "–ö—Ä–∏–ø—Ç–∞"

                text += f"""
{status_emoji} {format_price(payment['amount'])} ‚ÇΩ ({method_text})
{format_datetime(payment['created_at'])}\
"""

        await callback.message.edit_text(
            text=text,
            reply_markup=NavigationKeyboards.get_back_to_main_menu(),
            parse_mode="HTML"
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ my_payments_handler: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "close_menu")
async def close_menu_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é

    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å
    """
    try:
        await callback.message.delete()
        await callback.answer("–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ close_menu_handler: {e}")
        await callback.answer()


@router.callback_query(F.data.in_(["no_posts", "no_pending_payments", "current_page"]))
async def dummy_callbacks_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—É—Å—Ç—ã—Ö callback'–æ–≤ (–∑–∞–≥–ª—É—à–∫–∏)

    Args:
        callback: Callback –∑–∞–ø—Ä–æ—Å
    """
    await callback.answer()


@router.callback_query(F.data == "admin_panel_mode")
async def admin_panel_mode(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    try:
        if callback.from_user.id != settings.ADMIN_ID:
            await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", show_alert=True)
            return

        await state.clear()

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        try:
            stats = await AdminOperations.get_stats()
            pending_payments = await PaymentOperations.get_pending_payments()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            stats = {'users': {'total': 0}, 'posts': {'total': 0}, 'payments': {'revenue': 0}}
            pending_payments = []

        text = f"""\
üëë <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>

üìä <b>–ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('users', {}).get('total', 0)}
‚Ä¢ –ü–æ—Å—Ç–æ–≤: {stats.get('posts', {}).get('total', 0)}
‚Ä¢ –ü–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ: {len(pending_payments)}
‚Ä¢ –î–æ—Ö–æ–¥: {stats.get('payments', {}).get('revenue', 0)} ‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá\
"""
        await callback.message.edit_text(
            text=text,
            reply_markup=AdminKeyboards.get_admin_menu(),
            parse_mode="HTML"
        )
        await callback.answer()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ admin_panel_mode: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—ã—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
@router.message(StateFilter(None))
async def default_message_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        if message.from_user.id == settings.ADMIN_ID:
            # –î–ª—è –∞–¥–º–∏–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            from keyboards.inline import AdminKeyboards
            await message.answer(
                "üëë <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=AdminKeyboards.get_admin_menu(),
                parse_mode="HTML"
            )
        else:
            # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await message.answer(
                "üëã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
                reply_markup=MainKeyboards.get_main_menu(message.from_user.id, settings.ADMIN_ID)
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ default_message_handler: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /start",
            reply_markup=MainKeyboards.get_main_menu(message.from_user.id, settings.ADMIN_ID)
        )