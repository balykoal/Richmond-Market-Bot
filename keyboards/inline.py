"""\
Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict

from config import PostType, PaymentMethod, ItemCondition


class MainKeyboards:
    """–û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–æ—Ç–∞"""

    @staticmethod
    def get_main_menu(user_id: int, admin_id: int) -> InlineKeyboardMarkup:

        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç",
            callback_data="create_post"
        ))

        builder.add(InlineKeyboardButton(
            text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã",
            callback_data="my_posts"
        ))

        builder.add(InlineKeyboardButton(
            text="üí≥ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π",
            callback_data="my_payments"
        ))

        # –ö–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if user_id == admin_id:
            builder.add(InlineKeyboardButton(
                text="üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                callback_data="admin_panel_mode"
            ))

        builder.add(InlineKeyboardButton(
            text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            callback_data="info"
        ))

        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_post_type_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üìù –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç (200‚ÇΩ)",
            callback_data=f"post_type:{PostType.REGULAR}"
        ))

        builder.add(InlineKeyboardButton(
            text="üìå –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç (1000‚ÇΩ)",
            callback_data=f"post_type:{PostType.PINNED}"
        ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="back_to_main"
        ))

        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_payment_method_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üè¶ –°–ë–ü (–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞)",
            callback_data=f"payment:{PaymentMethod.SBP}"
        ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="back_to_post_type"
        ))

        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_payment_status_menu(payment_id: int) -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞

        Args:
            payment_id: ID –ø–ª–∞—Ç–µ–∂–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂",
            callback_data=f"check_payment:{payment_id}"
        ))

        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_payment"
        ))

        builder.adjust(1)
        return builder.as_markup()


class PostKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Å—Ç–∞–º–∏"""

    @staticmethod
    def get_item_condition_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚ú® –ù–æ–≤–æ–µ",
            callback_data=f"condition:{ItemCondition.NEW}"
        ))

        builder.add(InlineKeyboardButton(
            text="üîÑ –ë/—É",
            callback_data=f"condition:{ItemCondition.USED}"
        ))

        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def get_post_confirmation_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å",
            callback_data="confirm_post"
        ))

        builder.add(InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
            callback_data="edit_post"
        ))

        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_post"
        ))

        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_edit_post_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üì∏ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ",
            callback_data="edit_photos"
        ))

        builder.add(InlineKeyboardButton(
            text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",
            callback_data="edit_title"
        ))

        builder.add(InlineKeyboardButton(
            text="üìÑ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ",
            callback_data="edit_description"
        ))

        builder.add(InlineKeyboardButton(
            text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É",
            callback_data="edit_price"
        ))

        builder.add(InlineKeyboardButton(
            text="üìû –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã",
            callback_data="edit_contact"
        ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="back_to_confirmation"
        ))

        builder.adjust(2, 1)
        return builder.as_markup()

    @staticmethod
    def get_my_posts_menu(posts: List[Dict]) -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Args:
            posts: –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ—Å—Ç–∞–º–∏
        """
        builder = InlineKeyboardBuilder()

        for post in posts:
            status_emoji = {
                'draft': 'üìù',
                'published': '‚úÖ',
                'archived': 'üì¶'
            }.get(post['status'], '‚ùì')

            builder.add(InlineKeyboardButton(
                text=f"{status_emoji} {post['title'][:30]}...",
                callback_data=f"view_post:{post['post_id']}"
            ))

        if not posts:
            builder.add(InlineKeyboardButton(
                text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤",
                callback_data="no_posts"
            ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_main"
        ))

        builder.adjust(1)
        return builder.as_markup()

class AdminKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""

    @staticmethod
    def get_admin_menu() -> InlineKeyboardMarkup:
        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="üí≥ –ü–ª–∞—Ç–µ–∂–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ",
            callback_data="admin_payments"
        ))

        builder.add(InlineKeyboardButton(
            text="üßæ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞–º–∏",
            callback_data="admin_receipts"
        ))

        builder.add(InlineKeyboardButton(
            text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            callback_data="admin_stats"
        ))

        builder.add(InlineKeyboardButton(
            text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            callback_data="admin_users"
        ))

        builder.add(InlineKeyboardButton(
            text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞",
            callback_data="admin_broadcast"
        ))

        builder.add(InlineKeyboardButton(
            text="üìã –õ–æ–≥–∏",
            callback_data="admin_logs"
        ))

        builder.add(InlineKeyboardButton(
            text="üë§ –†–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            callback_data="switch_to_user_mode"
        ))
        builder.add(InlineKeyboardButton(
                text="üíæ –ë—ç–∫–∞–ø—ã",
                callback_data="admin_backups"
        ))

        builder.adjust(2, 2, 2)
        return builder.as_markup()

    @staticmethod
    def get_payment_moderation_menu(payment_id: int) -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞

        Args:
            payment_id: ID –ø–ª–∞—Ç–µ–∂–∞

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data=f"confirm_payment:{payment_id}"
        ))

        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
            callback_data=f"reject_payment:{payment_id}"
        ))

        builder.add(InlineKeyboardButton(
            text="üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            callback_data=f"user_profile:{payment_id}"
        ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
            callback_data="admin_payments"
        ))

        builder.adjust(2, 1, 1)
        return builder.as_markup()

    @staticmethod
    def get_payments_list_menu(payments: List[Dict]) -> InlineKeyboardMarkup:
        """
        –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ

        Args:
            payments: –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–ª–∞—Ç–µ–∂–µ–π
        """
        builder = InlineKeyboardBuilder()

        for payment in payments:
            method_emoji = "üè¶" if payment['method'] == PaymentMethod.SBP else "‚Çø"
            builder.add(InlineKeyboardButton(
                text=f"{method_emoji} {payment['amount']}‚ÇΩ - {payment['first_name'] or '–ë–µ–∑ –∏–º–µ–Ω–∏'}",
                callback_data=f"moderate_payment:{payment['payment_id']}"
            ))

        if not payments:
            builder.add(InlineKeyboardButton(
                text="‚úÖ –ù–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ",
                callback_data="no_pending_payments"
            ))

        builder.add(InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
            callback_data="admin_payments"
        ))

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
            callback_data="admin_menu"
        ))

        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_broadcast_confirmation_menu() -> InlineKeyboardMarkup:
        """
        –ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º",
            callback_data="confirm_broadcast"
        ))

        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_broadcast"
        ))

        builder.adjust(1)
        return builder.as_markup()


class NavigationKeyboards:
    """–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

    @staticmethod
    def get_back_to_main_menu() -> InlineKeyboardMarkup:
        """
        –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_main"
        ))

        return builder.as_markup()

    @staticmethod
    def get_close_menu() -> InlineKeyboardMarkup:
        """
        –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
        """
        builder = InlineKeyboardBuilder()

        builder.add(InlineKeyboardButton(
            text="‚ùå –ó–∞–∫—Ä—ã—Ç—å",
            callback_data="close_menu"
        ))

        return builder.as_markup()

    @staticmethod
    def get_pagination_keyboard(current_page: int, total_pages: int,
                               callback_prefix: str) -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

        Args:
            current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            total_pages: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
            callback_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data

        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        """
        builder = InlineKeyboardBuilder()

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        buttons = []

        if current_page > 1:
            buttons.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è",
                callback_data=f"{callback_prefix}:{current_page - 1}"
            ))

        buttons.append(InlineKeyboardButton(
            text=f"{current_page}/{total_pages}",
            callback_data="current_page"
        ))

        if current_page < total_pages:
            buttons.append(InlineKeyboardButton(
                text="‚û°Ô∏è",
                callback_data=f"{callback_prefix}:{current_page + 1}"
            ))

        for button in buttons:
            builder.add(button)

        builder.adjust(len(buttons))
        return builder.as_markup()


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏

def add_back_button(builder: InlineKeyboardBuilder,
                   callback_data: str = "back_to_main") -> InlineKeyboardBuilder:
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ

    Args:
        builder: –°—Ç—Ä–æ–∏—Ç–µ–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        callback_data: Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥

    Returns:
        –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å
    """
    builder.add(InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data=callback_data
    ))
    return builder


def create_yes_no_keyboard(yes_callback: str, no_callback: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –î–∞/–ù–µ—Ç

    Args:
        yes_callback: Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–∞"
        no_callback: Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–µ—Ç"

    Returns:
        Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç
    """
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚úÖ –î–∞",
        callback_data=yes_callback
    ))

    builder.add(InlineKeyboardButton(
        text="‚ùå –ù–µ—Ç",
        callback_data=no_callback
    ))

    builder.adjust(2)
    return builder.as_markup()

